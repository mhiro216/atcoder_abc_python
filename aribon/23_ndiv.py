# 分割数

"""
dp[i][j] := jのi分割の総数
dp[i][j] = dp[i-1][j] + dp[i][j-i]

https://juppy.hatenablog.com/entry/2018/10/26/%E8%9F%BB%E6%9C%AC_python_%E5%88%86%E5%89%B2%E6%95%B0_%E7%AB%B6%E6%8A%80%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0

jのi分割（例: 4の3分割）は
1. 1つでも0を含む（例: 0+0+4）
 うち1つの0を取り除いて「4の2(3-1)分割」（例: 0+4）と等しい
 これがdp[i-1][j]の項
2. 1つも0を含まない（例: 1+1+2）
 1つも0を含まないのでこれらすべてから1を引き、合計3を引いた「1(=4-1*3)の3分割」（例: 1-1,1-1,2-1 の 0+0+1）と等しい
 これがdp[i][j-1]の項
の和
"""

n = 4
m = 3
M = 10000

dp = [[0]*(n+1) for j in range(m+1)]

dp[0][0] = 1
for i in range(1, m+1):
    for j in range(n+1):
        if j-i >= 0:
            dp[i][j] = (dp[i-1][j] + dp[i][j-i]) % M
        else:
            dp[i][j] = dp[i-1][j]
print(dp[m][n])
